Homicides[age >= 15,sum(Dxs, na.rm = T)]$V1/
Homicides[year ,sum(Dxs, na.rm = T)]$V1
Homicides[age >= 15,sum(Dxs, na.rm = T)]$
Homicides[age >= 15,sum(Dxs, na.rm = T)]
Homicides[age >= 15,sum(Dxs, na.rm = T)]
Homicides[age >= 15,sum(Dxs, na.rm = T)]/
Homicides[year ,sum(Dxs, na.rm = T)]
Homicides[year ,sum(Dxs, na.rm = T)]
Homicides[,sum(Dxs, na.rm = T)]
Homicides[age >= 15,sum(Dxs, na.rm = T)]/
Homicides[,sum(Dxs, na.rm = T)]
rm(list=ls(all=TRUE))
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Violence-and-Lifespan-variation")
#### sex=1 <- males
#### 1. Infectious and respiratory diseases, 2. Cancers, 3. Circulatory,
#### 4. Birth, 5. Diabetes, 6. Other Medical Care AM
#### 7. IHD, 8. HIV, 9. Suicide, 10. Lung Cancer,
#### 11. Cirrhosis, 12. Homicide, 13. Road traffic accidents,
#### 14. other heart diseases, 15. Ill-defined causes, 16. All other Non-AM
#### Note: these data do not contain Not Specified categories
# if you want to re smooth
#source(file = 'R/1_1_Smoothing.R')
# These data comes from 1_1_Smoothing.R
load('Data/Smooth_Deaths.RData')
Homicides <- Dxs[Cause == 12 & state == 0, ]
Homicides[age >= 15 & year %in% seq(1995,2015,5),sum(Dxs, na.rm = T), by = list(year)]$V1/
Homicides[year %in% seq(1995,2015,5),sum(Dxs, na.rm = T), by = list(year)]$V1
Homicides[age >= 15,sum(Dxs, na.rm = T)]/
Homicides[,sum(Dxs, na.rm = T)]
#Calculate proportions of causes of death by age (remember to take care of 0 when applying to rates)
Dxs <- Dxs[,Dxs.prop := Dxs/sum(Dxs), by = list(year,sex,state,age)]
Dxs[is.na(Dxs.prop),]$Dxs.prop <- 0
#Get data for deaths and population
load('Data/Deaths_CONAPO.rdata')
load('Data/Population_CONAPO.rdata')
Nx     <- (basepryentMX)
Dx     <- (defspry)
gdata:: keep(Dxs,Nx,Dx,sure = T)
source('R/Functions.R')
# Get homogeneous datasets
# rename variables
names(Nx) <- c('row','year','state.name','state','cvegeo','sex2','age','Nx')
names(Dx) <- c('row','year','state.name','state','cvegeo','sex2','age','Dx')
# Get a variable name as integer for sex
Nx$sex <- 2 # for females
Dx$sex <- 2 # for females
Nx$sex[Nx$sex2=='Hombres'] <- 1 # for males
Dx$sex[Dx$sex2=='Hombres'] <- 1 # for males
# Get the same order in all of them
Dx <- data.table(Dx)
Nx <- data.table(Nx)
Dx <- Dx[,c('year','sex','state','age','Dx')]
Nx <- Nx[,c('year','sex','state','age','Nx')]
Dx <- Dx[year >= 1995 & year <= 2016,]
Nx <- Nx[year >= 1995 & year <= 2016,]
# order all datasets accordingly
Dx  <- Dx[order(year,sex,state,age),]
Nx  <- Nx[order(year,sex,state,age),]
Dxs <- Dxs[order(year,sex,state,Cause,age),]
# merge population to Dx
DxNx<- merge(Dx,Nx,all = T)
# estimate age.specific mortality rates
DxNx                <- DxNx[,mx :=Dx/Nx]
# maybe a good idea to fit a Kannisto model for the last ages
sort(unique(DxNx[is.na(mx),]$age))
sort(unique(DxNx[is.infinite(mx),]$age))
sort(unique(DxNx[mx > 1,]$age))
# example
# mx  <- DxNx[year==1995 & sex == 1 & state == 0,]$mx
# LT1 <- LifeTable(mx,sex='m')
#
# library(latticeExtra)
# f1 <- xyplot(log(mx) ~ 0:109, xlim= c(0,120), ylim = c(-9,0))
# f1
# fit_kan <- Kannisto(mx = mx[81:95], x = 80:94)
# mx2 <- predict.Kannisto(fit_kan,94:109)
# f3 <- xyplot(log(mx2) ~ 80:109, type = 'l')
# f1+f3
# mx[95:110] <- mx2
# xyplot(mx ~ 0:109, xlim= c(0,120))
#now fit a Kannisto model to all data
DxNx <- DxNx[order(year,sex,state,age),]
DxNx <- DxNx[,mxn := my.kannisto.fun(mx,x=80:94), by = list(year,sex,state)]
sort(unique(DxNx[is.na(mxn),]$age))
sort(unique(DxNx[is.infinite(mxn),]$age))
sort(unique(DxNx[mxn > 1,]$age))
DxNx <- DxNx[,-c(7)]
colnames(DxNx) <- c(colnames(DxNx)[1:6],'mx')
# Now transform Dxs to have a similar shape as DxNx
Dxs.cast <- dcast(Dxs,year+sex+state+age ~ Cause,value.var = 'Dxs.prop')
rm(list=ls(all=TRUE))
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Violence-and-Lifespan-variation")
#### sex=1 <- males
#### 1. Infectious and respiratory diseases, 2. Cancers, 3. Circulatory,
#### 4. Birth, 5. Diabetes, 6. Other Medical Care AM
#### 7. IHD, 8. HIV, 9. Suicide, 10. Lung Cancer,
#### 11. Cirrhosis, 12. Homicide, 13. Road traffic accidents,
#### 14. other heart diseases, 15. Ill-defined causes, 16. All other Non-AM
#### Note: these data do not contain Not Specified categories
# if you want to re smooth
#source(file = 'R/1_1_Smoothing.R')
# These data comes from 1_1_Smoothing.R
load('Data/Smooth_Deaths.RData')
#Calculate proportions of causes of death by age (remember to take care of 0 when applying to rates)
Dxs <- Dxs[,Dxs.prop := Dxs/sum(Dxs), by = list(year,sex,state,age)]
Dxs[is.na(Dxs.prop),]$Dxs.prop <- 0
#Get data for deaths and population
load('Data/Deaths_CONAPO.rdata')
load('Data/Population_CONAPO.rdata')
Nx     <- (basepryentMX)
Dx     <- (defspry)
gdata:: keep(Dxs,Nx,Dx,sure = T)
source('R/Functions.R')
# Get homogeneous datasets
# rename variables
names(Nx) <- c('row','year','state.name','state','cvegeo','sex2','age','Nx')
names(Dx) <- c('row','year','state.name','state','cvegeo','sex2','age','Dx')
# Get a variable name as integer for sex
Nx$sex <- 2 # for females
Dx$sex <- 2 # for females
Nx$sex[Nx$sex2=='Hombres'] <- 1 # for males
Dx$sex[Dx$sex2=='Hombres'] <- 1 # for males
# Get the same order in all of them
Dx <- data.table(Dx)
Nx <- data.table(Nx)
Dx <- Dx[,c('year','sex','state','age','Dx')]
Nx <- Nx[,c('year','sex','state','age','Nx')]
Dx <- Dx[year >= 1995 & year <= 2016,]
Nx <- Nx[year >= 1995 & year <= 2016,]
# order all datasets accordingly
Dx  <- Dx[order(year,sex,state,age),]
Nx  <- Nx[order(year,sex,state,age),]
Dxs <- Dxs[order(year,sex,state,Cause,age),]
# merge population to Dx
DxNx<- merge(Dx,Nx,all = T)
# estimate age.specific mortality rates
DxNx                <- DxNx[,mx :=Dx/Nx]
# maybe a good idea to fit a Kannisto model for the last ages
sort(unique(DxNx[is.na(mx),]$age))
sort(unique(DxNx[is.infinite(mx),]$age))
sort(unique(DxNx[mx > 1,]$age))
DxNx <- DxNx[order(year,sex,state,age),]
DxNx <- DxNx[,mxn := my.kannisto.fun(mx,x=80:94), by = list(year,sex,state)]
sort(unique(DxNx[is.na(mxn),]$age))
sort(unique(DxNx[is.infinite(mxn),]$age))
sort(unique(DxNx[mxn > 1,]$age))
DxNx <- DxNx[,-c(7)]
colnames(DxNx) <- c(colnames(DxNx)[1:6],'mx')
DxNx[year == 2005,]
DxNx[year == 2005 & state == 0,]
DxNx[year == 2005 & state == 0, sum(Nx), by = list(age)]
plot(DxNx[year == 2005 & state == 0, sum(Nx), by = list(age)])
DxNx[year == 2005 & state == 0, sum(Nx), by = list(age)]
DxNx[year == 2005 & state == 0, sum(Nx)]
DxNx[year == 2005 & state == 0, sum(Nx), by = list(age)]/ DxNx[year == 2005 & state == 0, sum(Nx)]
std.pop <- DxNx[year == 2005 & state == 0, sum(Nx), by = list(age)]/ DxNx[year == 2005 & state == 0, sum(Nx)]
std.pop
std.pop <- c(std.pop$V1)
std.pop
Homicides <- Dxs[state==0 & Cause == 12,]
Homicides
mxs       <- DxNx[state == 0,]
View(Homicides)
View(mxs)
Homicides$mx <- Homicides$Dxs.prop*mxs$mx
Homicides
Homicides
Homicides$mx
Homicides[,stdmx :=1]
Homicides
Homicides[,stdmx : mx*std.pop, by = list(year,sex)]
warnings()
std.pop
unique(Homicides$age)
Homicides[,stdmx : mx*std.pop, by = list(year,sex), std.pop=std.pop]
Homicides[,stdmx : mx*std.pop, by = list(year,sex), std.pop]
Homicides[,stdmx : mx*std.pop, by = list(year,sex)]
Homicides
Homicides[,stdmx : mx*std.pop, by = list(year,sex)]
Homicides[,stdmx := mx*std.pop, by = list(year,sex)]
Homicides
std.rates <- Homicides[,sum(stdmx), by = list(sex)]
std.rates
std.rates <- Homicides[,sum(stdmx), by = list(year,sex)]
std.rates
std.rates <- Homicides[,sum(stdmx)*1000000, by = list(year,sex)]
std.rates
rm(list=ls(all=TRUE))
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Violence-and-Lifespan-variation")
load('Data/Smooth_Deaths.RData')
Dxs <- Dxs[,Dxs.prop := Dxs/sum(Dxs), by = list(year,sex,state,age)]
Dxs[is.na(Dxs.prop),]$Dxs.prop <- 0
load('Data/Deaths_CONAPO.rdata')
load('Data/Population_CONAPO.rdata')
Nx     <- (basepryentMX)
Dx     <- (defspry)
gdata:: keep(Dxs,Nx,Dx,sure = T)
source('R/Functions.R')
names(Nx) <- c('row','year','state.name','state','cvegeo','sex2','age','Nx')
names(Dx) <- c('row','year','state.name','state','cvegeo','sex2','age','Dx')
# Get a variable name as integer for sex
Nx$sex <- 2 # for females
Dx$sex <- 2 # for females
Nx$sex[Nx$sex2=='Hombres'] <- 1 # for males
Dx$sex[Dx$sex2=='Hombres'] <- 1 # for males
# Get the same order in all of them
Dx <- data.table(Dx)
Nx <- data.table(Nx)
Dx <- Dx[,c('year','sex','state','age','Dx')]
Nx <- Nx[,c('year','sex','state','age','Nx')]
Dx <- Dx[year >= 1995 & year <= 2016,]
Nx <- Nx[year >= 1995 & year <= 2016,]
Dx  <- Dx[order(year,sex,state,age),]
Nx  <- Nx[order(year,sex,state,age),]
Dxs <- Dxs[order(year,sex,state,Cause,age),]
DxNx<- merge(Dx,Nx,all = T)
DxNx                <- DxNx[,mx :=Dx/Nx]
DxNx
DxNxHom <- merge(DxNx,Dxs, all = T)
rm(list=ls(all=TRUE))
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Violence-and-Lifespan-variation")
#### sex=1 <- males
#### 1. Infectious and respiratory diseases, 2. Cancers, 3. Circulatory,
#### 4. Birth, 5. Diabetes, 6. Other Medical Care AM
#### 7. IHD, 8. HIV, 9. Suicide, 10. Lung Cancer,
#### 11. Cirrhosis, 12. Homicide, 13. Road traffic accidents,
#### 14. other heart diseases, 15. Ill-defined causes, 16. All other Non-AM
#### Note: these data do not contain Not Specified categories
# if you want to re smooth
#source(file = 'R/1_1_Smoothing.R')
# These data comes from 1_1_Smoothing.R
load('Data/Smooth_Deaths.RData')
#Calculate proportions of causes of death by age (remember to take care of 0 when applying to rates)
Dxs <- Dxs[,Dxs.prop := Dxs/sum(Dxs), by = list(year,sex,state,age)]
Dxs[is.na(Dxs.prop),]$Dxs.prop <- 0
load('Data/Deaths_CONAPO.rdata')
load('Data/Population_CONAPO.rdata')
Nx     <- (basepryentMX)
Dx     <- (defspry)
gdata:: keep(Dxs,Nx,Dx,sure = T)
source('R/Functions.R')
names(Nx) <- c('row','year','state.name','state','cvegeo','sex2','age','Nx')
names(Dx) <- c('row','year','state.name','state','cvegeo','sex2','age','Dx')
# Get a variable name as integer for sex
Nx$sex <- 2 # for females
Dx$sex <- 2 # for females
Nx$sex[Nx$sex2=='Hombres'] <- 1 # for males
Dx$sex[Dx$sex2=='Hombres'] <- 1 # for males
# Get the same order in all of them
Dx <- data.table(Dx)
Nx <- data.table(Nx)
Dx <- Dx[,c('year','sex','state','age','Dx')]
Nx <- Nx[,c('year','sex','state','age','Nx')]
Dx <- Dx[year >= 1995 & year <= 2015,]
Nx <- Nx[year >= 1995 & year <= 2015,]
Dx  <- Dx[order(year,sex,state,age),]
Nx  <- Nx[order(year,sex,state,age),]
Dxs <- Dxs[order(year,sex,state,Cause,age),]
Dx <- Dx[state=0,]
Dx <- Dx[state==0,]
Nx <- Nx[state==0,]
Dxs<- Dxs[state== 0 & Cause ==12,]
Dxs <- Dxs[year >= 1995 & year <= 2015,]
DxNx<- merge(Dx,Nx,all = T)
DxNxHom <- merge(DxNx,Dxs, all = T)
DxNx                <- DxNx[,mx :=(Dx*Dxs.prop)/Nx]
DxNxHom                <- DxNx[,mx :=(Dx*Dxs.prop)/Nx]
DxNxHom[,mx :=(Dx*Dxs.prop)/Nx]
DxNxHom
DxNx<- merge(Dx,Nx,all = T)
DxNxHom <- merge(DxNx,Dxs, all = T)
DxNxHom
sort(unique(DxNx[is.na(mx),]$age))
sort(unique(DxNx[is.infinite(mx),]$age))
sort(unique(DxNx[mx > 1,]$age))
sort(unique(DxNxHom[is.na(mx),]$age))
sort(unique(DxNxHom[is.infinite(mx),]$age))
sort(unique(DxNxHom[mx > 1,]$age))
DxNxHom[,mx :=(Dx)/Nx]
sort(unique(DxNxHom[is.na(mx),]$age))
sort(unique(DxNxHom[is.infinite(mx),]$age))
sort(unique(DxNxHom[mx > 1,]$age))
DxNxHom <- DxNxHom[order(year,sex,state,age),]
DxNxHom <- DxNxHom[,mxn := my.kannisto.fun(mx,x=80:94), by = list(year,sex,state)]
sort(unique(DxNxHom[is.na(mxn),]$age))
sort(unique(DxNxHom[is.infinite(mxn),]$age))
sort(unique(DxNxHom[mxn > 1,]$age))
DxNxHom[,hom.rates:= mxn*Dxs.prop]
DxNxHom
std.pop <- DxNx[year == 2005 & state == 0, sum(Nx), by = list(age)]/ DxNx[year == 2005 & state == 0, sum(Nx)]
std.pop <- c(std.pop$V1)
sum(std.pop)
std.pop
hom.rates
DxNxHom
DxNxHom[,std.hom:= hom.rates*std.pop, by = list(year,sex)]
DxNxHom
View(DxNxHom)
View(DxNxHom)
DxNxHom[,sum(std.hom), by = list(year,sex)]
DxNxHom[,sum(std.hom)*100000, by = list(year,sex)]
fig.data <- DxNxHom[,sum(std.hom)*100000, by = list(year,sex)]
fig.data
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1.2) +
facet_wrap(~sex)
p
ggplot(fig.data, aes(x = year,y = V1,colour=sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1.2))
library(ggplot2)
ggplot(fig.data, aes(x = year,y = V1,colour=sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1.2))
ggplot(fig.data, aes(x = year,y = V1,colour=sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1.2)) +
facet_wrap(~sex)
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1))
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1)) +
theme_light()+
labs(y = "Years")
-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()
-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Years")
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex))
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex')
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F)
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Years")
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = sex)) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F, col = c('red','blue'))
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1, col = c('red','blue')),show.legend = F) +
theme_light()
fig.data$sex <- as.factor(fig.data)
fig.data$sex <- as.factor(fig.data$sex)
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F)
ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue')) +
theme(text = element_text(size=14),
strip.text.x = element_text(size = 14, colour = "black"))
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= 1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue')) +
theme(text = element_text(size=14),
strip.text.x = element_text(size = 14, colour = "black"))
p
pdf(file="Manuscript/AJPH Submission/RR Submission/ASMR.pdf",width=7,height=4,useDingbats = F)
p
dev.off()
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size= .7),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue')) +
theme(text = element_text(size=14),
strip.text.x = element_text(size = 14, colour = "black"))
p
pdf(file="Manuscript/AJPH Submission/RR Submission/ASMR.pdf",width=7,height=4,useDingbats = F)
p
dev.off()
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(lwd= .7),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue')) +
theme(text = element_text(size=14),
strip.text.x = element_text(size = 14, colour = "black"))
p
pdf(file="Manuscript/AJPH Submission/RR Submission/ASMR.pdf",width=7,height=4,useDingbats = F)
p
dev.off()
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue')) +
p
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p
pdf(file="Manuscript/AJPH Submission/RR Submission/ASMR.pdf",width=7,height=4,useDingbats = F)
p
dev.off()
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size=1.2),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p
pdf(file="Manuscript/AJPH Submission/RR Submission/ASMR.pdf",width=7,height=4,useDingbats = F)
p
dev.off()
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size=.7),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p
pdf(file="Manuscript/AJPH Submission/RR Submission/ASMR.pdf",width=7,height=4,useDingbats = F)
p
dev.off()
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size=.5),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size=.1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(size=.1),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p
p <-ggplot(fig.data, aes(x = year,y = V1,colour=sex, group = factor(sex))) +
ggtitle('Standardized homicide rates by sex') +
geom_line(aes(),show.legend = F) +
theme_light()+
labs(y = "Homicide rate")+
scale_colour_manual('Sex', values = c('red','blue'))
p
pdf(file="Manuscript/AJPH Submission/RR Submission/ASMR.pdf",width=7,height=4,useDingbats = F)
p
dev.off()
